// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nomenclatures.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Nomenclatures.Migrations
{
    [DbContext(typeof(NomenclaturesContext))]
    partial class NomenclaturesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Nomenclatures.Data.ComponentQty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ComposeId")
                        .HasColumnType("integer");

                    b.Property<int?>("MPId")
                        .HasColumnType("integer");

                    b.Property<int?>("PSFId")
                        .HasColumnType("integer");

                    b.Property<double>("Qty")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ComposeId");

                    b.HasIndex("MPId");

                    b.HasIndex("PSFId");

                    b.ToTable("Composants");
                });

            modelBuilder.Entity("Nomenclatures.Data.FamilleMatierePremiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<TimeSpan?>("DureeOptimaleUtilisation")
                        .HasColumnType("interval");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FamillesPremieres");
                });

            modelBuilder.Entity("Nomenclatures.Data.MatierePremiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Bio")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("DureeConservation")
                        .HasColumnType("interval");

                    b.Property<int?>("FamilleId")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PoidsUnitaire")
                        .HasColumnType("double precision");

                    b.Property<int>("PourcentageHumidite")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FamilleId");

                    b.ToTable("MatieresPremieres");
                });

            modelBuilder.Entity("Nomenclatures.Data.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Bio")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Produits");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Produit");
                });

            modelBuilder.Entity("Nomenclatures.Data.ProduitFini", b =>
                {
                    b.HasBaseType("Nomenclatures.Data.Produit");

                    b.HasDiscriminator().HasValue("ProduitFini");
                });

            modelBuilder.Entity("Nomenclatures.Data.ProduitSemiFini", b =>
                {
                    b.HasBaseType("Nomenclatures.Data.Produit");

                    b.HasDiscriminator().HasValue("ProduitSemiFini");
                });

            modelBuilder.Entity("Nomenclatures.Data.ComponentQty", b =>
                {
                    b.HasOne("Nomenclatures.Data.Produit", "Compose")
                        .WithMany("Composants")
                        .HasForeignKey("ComposeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nomenclatures.Data.MatierePremiere", "MP")
                        .WithMany()
                        .HasForeignKey("MPId");

                    b.HasOne("Nomenclatures.Data.ProduitSemiFini", "PSF")
                        .WithMany()
                        .HasForeignKey("PSFId");

                    b.Navigation("Compose");

                    b.Navigation("MP");

                    b.Navigation("PSF");
                });

            modelBuilder.Entity("Nomenclatures.Data.MatierePremiere", b =>
                {
                    b.HasOne("Nomenclatures.Data.FamilleMatierePremiere", "Famille")
                        .WithMany()
                        .HasForeignKey("FamilleId");

                    b.Navigation("Famille");
                });

            modelBuilder.Entity("Nomenclatures.Data.Produit", b =>
                {
                    b.Navigation("Composants");
                });
#pragma warning restore 612, 618
        }
    }
}
